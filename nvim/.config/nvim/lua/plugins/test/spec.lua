return {
  -- {
  --   'dstein64/vim-startuptime',
  --   -- lazy-load on a command
  --   cmd = 'StartupTime',
  --   -- init is called during startup. Configuration for vim plugins typically should be set in an init function
  --   init = function()
  --     vim.g.startuptime_tries = 10
  --   end,
  -- },

  -- -- you can use the VeryLazy event for things that can
  -- -- load later and are not important for the initial UI
  -- { 'stevearc/dressing.nvim', event = 'VeryLazy' },

  -- {
  --   'Wansmer/treesj',
  --   keys = {
  --     { 'J', '<cmd>TSJToggle<cr>', desc = 'Join Toggle' },
  --   },
  --   opts = { use_default_keymaps = false, max_join_length = 150 },
  -- },

  -- {
  --   'monaqa/dial.nvim',
  --   -- lazy-load on keys
  --   -- mode is `n` by default. For more advanced options, check the section on key mappings
  --   keys = { '<C-a>', { '<C-x>', mode = 'n' } },
  -- },

  -- -- local plugins need to be explicitly configured with dir
  -- -- { dir = "~/projects/secret.nvim" },

  -- {
  --   "folke/noice.nvim",
  --   event = "VeryLazy",
  --   dependencies = {
  --     "MunifTanjim/nui.nvim",
  --     "rcarriga/nvim-notify",
  --   },
  --   opts = {
  --     cmdline = { enabled = false },
  --     messages = { enabled = false },
  --     lsp = {
  --       progress = {
  --         enabled = false,
  --       },
  --       override = {
  --         ["vim.lsp.util.convert_input_to_markdown_lines"] = true,
  --         ["vim.lsp.util.stylize_markdown"] = true,
  --         ["cmp.entry.get_documentation"] = true, -- requires hrsh7th/nvim-cmp
  --       },
  --     },
  --   },
  -- },

  -- {
  --   "lewis6991/hover.nvim",
  --   config = function()
  --     require("hover").setup({
  --       init = function()
  --         -- Require providers
  --         require("hover.providers.lsp")
  --         -- require('hover.providers.gh')
  --         -- require('hover.providers.gh_user')
  --         -- require('hover.providers.jira')
  --         -- require('hover.providers.dap')
  --         -- require('hover.providers.fold_preview')
  --         -- require('hover.providers.diagnostic')
  --         -- require('hover.providers.man')
  --         -- require('hover.providers.dictionary')
  --         -- require('hover.providers.highlight')
  --       end,
  --       preview_opts = {
  --         border = "single",
  --       },
  --       -- Whether the contents of a currently open hover window should be moved
  --       -- to a :h preview-window when pressing the hover keymap.
  --       preview_window = false,
  --       title = true,
  --       mouse_providers = {
  --         "LSP",
  --       },
  --       mouse_delay = 1000,
  --     })

  --     -- Setup keymaps
  --     vim.keymap.set("n", "K", require("hover").hover, { desc = "hover.nvim" })
  --     vim.keymap.set("n", "gK", require("hover").hover_select, { desc = "hover.nvim (select)" })
  --     vim.keymap.set("n", "<C-p>", function()
  --       require("hover").hover_switch("previous")
  --     end, { desc = "hover.nvim (previous source)" })
  --     vim.keymap.set("n", "<C-n>", function()
  --       require("hover").hover_switch("next")
  --     end, { desc = "hover.nvim (next source)" })

  --     -- Mouse support
  --     vim.keymap.set("n", "<MouseMove>", require("hover").hover_mouse, { desc = "hover.nvim (mouse)" })
  --     vim.o.mousemoveevent = true
  --   end,
  -- },
}
